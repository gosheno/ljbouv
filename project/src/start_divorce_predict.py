# Импортируем необходимые библиотеки
import pandas as pd
import numpy as np
import streamlit as st
import joblib

# Загрузка обученной модели и информации о признаках
model = joblib.load('TIPIS/project/src/divorce.pkl')


# Определение всех признаков (соответствует обучению модели)
questions = [
    "Когда один из нас извиняется, если наши обсуждения идут в плохом направлении, проблема не обостряется.",
    "Я знаю, что мы можем игнорировать наши различия, даже если иногда становится трудно.",
    "Когда это необходимо, мы с партнером можем начать обсуждение заново и исправить ситуацию.",
    "Когда я спорю с партнером, в конце концов, я всё равно свяжусь с ним.",
    "Время, проведенное с партнером, особенно важно для нас.",
    "Мы не проводим время дома как партнеры.",
    "Мы больше похожи на двух незнакомцев, которые делят одно пространство дома, а не на семью.",
    "Я наслаждаюсь нашими праздниками с партнером.",
    "Я люблю путешествовать с партнером.",
    "У моего партнера и у меня большинство целей совпадают.",
    "Я думаю, что однажды в будущем, оглядываясь назад, увижу, что мы с партнером гармоничны друг с другом.",
    "У моего партнера и у меня схожие ценности в вопросах личной свободы.",
    "У меня и моего партнера схожие интересы в плане развлечений.",
    "Большинство наших целей, связанных с людьми (детьми, друзьями и т.д.), совпадают.",
    "Наши мечты о совместной жизни с партнером схожи и гармоничны.",
    "Мы с партнером совместимы в понимании того, какой должна быть любовь.",
    "Мы с партнером разделяем одни и те же взгляды на то, что значит быть счастливым в жизни.",
    "У нас с партнером похожие представления о том, каким должен быть брак.",
    "У нас с партнером схожие взгляды на распределение ролей в браке.",
    "У нас с партнером схожие ценности в вопросах доверия.",
    "Я точно знаю, что нравится моему партнеру.",
    "Я знаю, как мой партнер хочет, чтобы за ним ухаживали, когда он болеет.",
    "Я знаю, какая еда нравится моему партнеру.",
    "Я могу сказать, с каким стрессом сталкивается мой партнер в жизни.",
    "Я знаю внутренний мир моего партнера.",
    "Я знаю основные беспокойства моего партнера.",
    "Я знаю, какие сейчас источники стресса у моего партнера.",
    "Я знаю надежды и желания моего партнера.",
    "Я очень хорошо знаю своего партнера.",
    "Я знаю друзей моего партнера и их социальные связи.",
    "Я чувствую агрессию, когда спорю с партнером.",
    "Обсуждая с партнером, я обычно использую такие выражения, как …..",
    "Я могу использовать негативные высказывания о личности моего партнера во время обсуждений.",
    "Я могу использовать оскорбительные выражения во время обсуждений.",
    "Я могу оскорблять в наших обсуждениях.",
    "Я могу быть унизительным во время споров.",
    "Мои споры с партнером не бывают спокойными.",
    "Я ненавижу манеру партнера поднимать тему.",
    "Ссоры часто возникают внезапно.",
    "Мы начинаем ссору прежде, чем я успеваю понять, что происходит.",
    "Когда я говорю с партнером о чем-то, мое спокойствие внезапно исчезает.",
    "Когда я спорю с партнером, я просто замыкаюсь и ничего не говорю.",
    "Я в основном жажду немного успокоить обстановку.",
    "Иногда я думаю, что мне было бы полезно уйти из дома на время.",
    "Я предпочел бы молчать, чем спорить с партнером.",
    "Даже если я прав в споре, я стараюсь не расстраивать другую сторону.",
    "Когда я спорю с партнером, я молчу, потому что боюсь не сдержать свой гнев.",
    "Я чувствую себя правым в наших обсуждениях.",
    "То, в чем меня обвиняют, ко мне не имеет никакого отношения.",
    "На самом деле я не виноват в том, в чем меня обвиняют.",
    "Я не виноват в проблемах дома.",
    "Я бы не колебался, чтобы рассказать партнеру о его недостатках.",
    "Когда мы обсуждаем, я напоминаю партнеру о его недостатках.",
    "Я не боюсь рассказать партнеру о его некомпетентности."
]

all_columns = ['Atr1', 'Atr2', 'Atr3', 'Atr4', 'Atr5', 'Atr6', 'Atr7', 'Atr8', 'Atr9', 'Atr10', 'Atr11', 'Atr12', 'Atr13', 'Atr14', 'Atr15', 'Atr16', 'Atr17', 'Atr18', 'Atr19', 'Atr20', 'Atr21', 'Atr22', 'Atr23', 'Atr24', 'Atr25', 'Atr26', 'Atr27', 'Atr28', 'Atr29', 'Atr30', 'Atr31', 'Atr32', 'Atr33', 'Atr34', 'Atr35', 'Atr36', 'Atr37', 'Atr38', 'Atr39', 'Atr40', 'Atr41', 'Atr42', 'Atr43', 'Atr44', 'Atr45', 'Atr46', 'Atr47', 'Atr48', 'Atr49', 'Atr50', 'Atr51', 'Atr52', 'Atr53', 'Atr54']
# Заголовок приложения
st.title('Прогноз развода')
attrs = []
# Ввод данных пользователя
for item in questions:
    attrs.append(st.selectbox(f'{item}', [0, 1, 2, 3, 4]))

# Преобразование введенных данных в формат, понятный модели

input_data = dict(zip(all_columns, attrs))

# Заполняем отсутствующие признаки нулями
input_df = pd.DataFrame([input_data], columns=all_columns).fillna(0)

# Предсказание стоимости
if st.button('Предсказать развод'):
    prediction = model.predict(input_df)  
    st.success(f'шанс развода:{1 - prediction[0]:.2f}')
